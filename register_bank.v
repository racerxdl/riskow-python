/* Generated by Amaranth Yosys 0.10.0 (PyPI ver 0.10.0.dev46, git sha1 dca8fb54a) */

(* \amaranth.hierarchy  = "top" *)
(* top =  1  *)
(* generator = "Amaranth" *)
module top(regNum0, regNum1, wRegNum, writeEnable, dataOut0, dataOut1, dataIn, clk, rst, reset);
  (* src = "/home/lucas/Works/FPGA/amaranth/register_bank.py:28" *)
  wire \$10 ;
  (* src = "/home/lucas/Works/FPGA/amaranth/register_bank.py:28" *)
  wire \$12 ;
  (* src = "/home/lucas/Works/FPGA/amaranth/register_bank.py:27" *)
  wire \$4 ;
  (* src = "/home/lucas/Works/FPGA/amaranth/register_bank.py:28" *)
  wire \$6 ;
  (* src = "/home/lucas/Works/FPGA/amaranth/register_bank.py:28" *)
  wire \$8 ;
  (* src = "/home/lucas/Works/FPGA/amaranth/register_bank.py:24" *)
  wire [3:0] StorageHUE_r_addr;
  (* src = "/home/lucas/Works/FPGA/amaranth/register_bank.py:25" *)
  wire [3:0] \StorageHUE_r_addr$2 ;
  (* src = "/home/lucas/Works/FPGA/amaranth/register_bank.py:24" *)
  wire [31:0] StorageHUE_r_data;
  (* src = "/home/lucas/Works/FPGA/amaranth/register_bank.py:25" *)
  wire [31:0] \StorageHUE_r_data$3 ;
  (* src = "/home/lucas/Works/FPGA/amaranth/register_bank.py:23" *)
  wire [3:0] StorageHUE_w_addr;
  (* src = "/home/lucas/Works/FPGA/amaranth/register_bank.py:23" *)
  wire [31:0] StorageHUE_w_data;
  (* src = "/home/lucas/Works/FPGA/amaranth/register_bank.py:23" *)
  wire StorageHUE_w_en;
  (* src = "/home/lucas/.local/lib/python3.8/site-packages/amaranth/hdl/ir.py:527" *)
  input clk;
  (* src = "/home/lucas/Works/FPGA/amaranth/register_bank.py:17" *)
  input [31:0] dataIn;
  (* src = "/home/lucas/Works/FPGA/amaranth/register_bank.py:15" *)
  output [31:0] dataOut0;
  (* src = "/home/lucas/Works/FPGA/amaranth/register_bank.py:16" *)
  output [31:0] dataOut1;
  (* src = "/home/lucas/Works/FPGA/amaranth/register_bank.py:10" *)
  input [3:0] regNum0;
  (* src = "/home/lucas/Works/FPGA/amaranth/register_bank.py:11" *)
  input [3:0] regNum1;
  (* src = "/home/lucas/Works/FPGA/amaranth/register_bank.py:9" *)
  input reset;
  (* src = "/home/lucas/.local/lib/python3.8/site-packages/amaranth/hdl/ir.py:527" *)
  input rst;
  (* src = "/home/lucas/Works/FPGA/amaranth/register_bank.py:12" *)
  input [3:0] wRegNum;
  (* src = "/home/lucas/Works/FPGA/amaranth/register_bank.py:13" *)
  input writeEnable;
  reg [31:0] StorageHUE [15:0];
  initial begin
    StorageHUE[0] = 32'd0;
    StorageHUE[1] = 32'd0;
    StorageHUE[2] = 32'd0;
    StorageHUE[3] = 32'd0;
    StorageHUE[4] = 32'd0;
    StorageHUE[5] = 32'd0;
    StorageHUE[6] = 32'd0;
    StorageHUE[7] = 32'd0;
    StorageHUE[8] = 32'd0;
    StorageHUE[9] = 32'd0;
    StorageHUE[10] = 32'd0;
    StorageHUE[11] = 32'd0;
    StorageHUE[12] = 32'd0;
    StorageHUE[13] = 32'd0;
    StorageHUE[14] = 32'd0;
    StorageHUE[15] = 32'd0;
  end
  always @(posedge clk) begin
    if (StorageHUE_w_en)
      StorageHUE[StorageHUE_w_addr] <= StorageHUE_w_data;
  end
  reg [3:0] _0_;
  reg [3:0] _1_;
  always @(posedge clk) begin
    _0_ <= StorageHUE_r_addr;
    _1_ <= \StorageHUE_r_addr$2 ;
  end
  assign StorageHUE_r_data = StorageHUE[_0_];
  assign \StorageHUE_r_data$3  = StorageHUE[_1_];
  assign \$10  = | (* src = "/home/lucas/Works/FPGA/amaranth/register_bank.py:28" *) wRegNum;
  assign \$12  = \$8  & (* src = "/home/lucas/Works/FPGA/amaranth/register_bank.py:28" *) \$10 ;
  assign \$4  = ~ (* src = "/home/lucas/Works/FPGA/amaranth/register_bank.py:27" *) reset;
  assign \$8  = \$4  & (* src = "/home/lucas/Works/FPGA/amaranth/register_bank.py:28" *) \$6 ;
  assign dataOut1 = \StorageHUE_r_data$3 ;
  assign \StorageHUE_r_addr$2  = regNum1;
  assign dataOut0 = StorageHUE_r_data;
  assign StorageHUE_r_addr = regNum0;
  assign StorageHUE_w_en = \$12 ;
  assign StorageHUE_w_data = dataIn;
  assign StorageHUE_w_addr = wRegNum;
  assign \$6  = writeEnable;
endmodule
